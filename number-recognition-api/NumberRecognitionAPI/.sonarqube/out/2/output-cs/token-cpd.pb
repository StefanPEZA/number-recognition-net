ê/
vD:\Github\number-recognition-net\number-recognition-api\NumberRecognitionAPI\Services\DatasetService\DatasetService.cs
	namespace 	
Services
 
. 
DatasetService !
{ 
public		 

class		 
DatasetService		 
:		  !
IDatasetService		" 1
{

 
private 
readonly 
IRepository $
<$ %
Dataset% ,
>, -
_repository. 9
;9 :
public 
DatasetService 
( 
IRepository )
<) *
Dataset* 1
>1 2

repository3 =
)= >
{ 	
_repository 
= 

repository $
;$ %
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Dataset& -
>- .
>. /
GetAllDatasetAsync0 B
(B C
stringC I
labelJ O
,O P
intQ T
limitU Z
=[ \
$num] _
)_ `
{ 	
return 
await 
_repository $
.$ %
GetAllAsync% 0
(0 1
limit1 6
,6 7
d8 9
=>: <
d= >
.> ?
Label? D
==E G
labelH M
)M N
;N O
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Dataset& -
>- .
>. /"
GetAllTestDatasetAsync0 F
(F G
stringG M
labelN S
,S T
intU X
limitY ^
=_ `
$numa c
)c d
{ 	
return 
await 
_repository $
.$ %
GetAllAsync% 0
(0 1
limit1 6
,6 7
d8 9
=>: <
(= >
bool> B
)B C
dC D
.D E
IsTestE K
&&L N
dO P
.P Q
LabelQ V
==W Y
labelZ _
)_ `
;` a
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
Dataset& -
>- .
>. /#
GetAllTrainDatasetAsync0 G
(G H
stringH N
labelO T
,T U
intV Y
limitZ _
=` a
$numb d
)d e
{ 	
return 
await 
_repository $
.$ %
GetAllAsync% 0
(0 1
limit1 6
,6 7
d8 9
=>: <
!= >
(> ?
bool? C
)C D
dD E
.E F
IsTestF L
&&M O
dP Q
.Q R
LabelR W
==X Z
label[ `
)` a
;a b
} 	
public   
async   
Task   
<   
Dataset   !
>  ! "
GetDatasetAsync  # 2
(  2 3
Guid  3 7
id  8 :
)  : ;
{!! 	
return"" 
await"" 
_repository"" $
.""$ %
GetByIdAsync""% 1
(""1 2
id""2 4
)""4 5
;""5 6
}## 	
public%% 
async%% 
Task%% 
<%% 
bool%% 
>%% 
InsertIntoDataset%%  1
(%%1 2
Dataset%%2 9
dataset%%: A
)%%A B
{&& 	
try'' 
{(( 
await)) 
_repository)) !
.))! "
InsertAsync))" -
())- .
dataset)). 5
)))5 6
;))6 7
return** 
true** 
;** 
}++ 
catch,, 
(,, 
	Exception,, 
ex,, 
),,  
{-- 
Console.. 
... 
	WriteLine.. !
(..! "
ex.." $
)..$ %
;..% &
return// 
false// 
;// 
}00 
}11 	
public33 
async33 
Task33 
<33 
bool33 
>33 
UpdateDataset33  -
(33- .
Dataset33. 5
dataset336 =
)33= >
{44 	
try55 
{66 
await77 
_repository77 !
.77! "
UpdateAsync77" -
(77- .
dataset77. 5
)775 6
;776 7
return88 
true88 
;88 
}99 
catch:: 
(:: 
	Exception:: 
ex:: 
)::  
{;; 
Console<< 
.<< 
	WriteLine<< !
(<<! "
ex<<" $
)<<$ %
;<<% &
return== 
false== 
;== 
}>> 
}?? 	
publicAA 
asyncAA 
TaskAA 
<AA 
boolAA 
>AA "
DeleteFromDatasetAsyncAA  6
(AA6 7
GuidAA7 ;
idAA< >
)AA> ?
{BB 	
tryCC 
{DD 
DatasetEE 
datasetEE 
=EE  !
awaitEE" '
_repositoryEE( 3
.EE3 4
GetByIdAsyncEE4 @
(EE@ A
idEEA C
)EEC D
;EED E
awaitFF 
_repositoryFF !
.FF! "
DeleteAsyncFF" -
(FF- .
datasetFF. 5
)FF5 6
;FF6 7
returnGG 
trueGG 
;GG 
}HH 
catchII 
(II 
	ExceptionII 
exII 
)II  
{JJ 
ConsoleKK 
.KK 
	WriteLineKK !
(KK! "
exKK" $
)KK$ %
;KK% &
returnLL 
falseLL 
;LL 
}MM 
}NN 	
}OO 
}PP ˆ
wD:\Github\number-recognition-net\number-recognition-api\NumberRecognitionAPI\Services\DatasetService\IDatasetService.cs
	namespace 	
Services
 
. 
DatasetService !
{ 
public 

	interface 
IDatasetService $
{		 
Task

 
<

 
IEnumerable

 
<

 
Dataset

  
>

  !
>

! "
GetAllDatasetAsync

# 5
(

5 6
string

6 <
label

= B
,

B C
int

D G
limit

H M
=

N O
$num

P R
)

R S
;

S T
Task 
< 
IEnumerable 
< 
Dataset  
>  !
>! ""
GetAllTestDatasetAsync# 9
(9 :
string: @
labelA F
,F G
intH K
limitL Q
=R S
$numT V
)V W
;W X
Task 
< 
IEnumerable 
< 
Dataset  
>  !
>! "#
GetAllTrainDatasetAsync# :
(: ;
string; A
labelB G
,G H
intI L
limitM R
=S T
$numU W
)W X
;X Y
Task 
< 
Dataset 
> 
GetDatasetAsync %
(% &
Guid& *
id+ -
)- .
;. /
Task 
< 
bool 
> 
InsertIntoDataset $
($ %
Dataset% ,
dataset- 4
)4 5
;5 6
Task 
< 
bool 
> 
UpdateDataset  
(  !
Dataset! (
dataset) 0
)0 1
;1 2
Task 
< 
bool 
> "
DeleteFromDatasetAsync )
() *
Guid* .
id/ 1
)1 2
;2 3
} 
} ”

sD:\Github\number-recognition-net\number-recognition-api\NumberRecognitionAPI\Services\ImageService\IImageService.cs
	namespace 	
Services
 
. 
ImageService 
{ 
public 

	interface 
IImageService "
{ 
Task		 
<		 
byte		 
[		 
]		 
>		 
Resize		 
(		 
byte		  
[		  !
]		! "
source		# )
,		) *
int		* -
width		. 3
,		3 4
int		5 8
height		9 ?
)		? @
;		@ A
Task

 
<

 
byte

 
[

 
]

 
>

 
Crop

 
(

 
byte

 
[

 
]

  
source

! '
)

' (
;

( )
Task 
< 
List 
< 
byte 
[ 
] 
> 
> 
Split  
(  !
byte! %
[% &
]& '
source( .
). /
;/ 0
Task 
< 
float 
> 
Predict 
( 
byte  
[  !
]! "
source# )
)) *
;* +
} 
} …±
tD:\Github\number-recognition-net\number-recognition-api\NumberRecognitionAPI\Services\ImageService\ImageProcessor.cs
	namespace

 	
Services


 
.

 
ImageService

 
{ 
class 	
ImageProcessor
 
{ 
private 
readonly 
Image 
< 
Rgba32 %
>% &
image' ,
;, -
int 
[ 
, 
] 
_imageMatrix 
; 
public 
ImageProcessor 
( 
byte "
[" #
]# $
source% +
)+ ,
{ 	
image 
= 
Image 
. 
Load 
< 
Rgba32 %
>% &
(& '
source' -
)- .
;. /
_imageMatrix 
= #
GetPixelMatrixFromImage 2
(2 3
)3 4
;4 5
} 	
private 
int 
[ 
, 
] #
GetPixelMatrixFromImage .
(. /
)/ 0
{ 	
int 
[ 
, 
] 
result 
= 
new 
int  #
[# $
image$ )
.) *
Height* 0
,0 1
image2 7
.7 8
Width8 =
]= >
;> ?
for 
( 
int 
i 
= 
$num 
; 
i 
< 
image  %
.% &
Height& ,
;, -
i. /
++/ 1
)1 2
{ 
for 
( 
int 
j 
= 
$num 
; 
j  !
<" #
image$ )
.) *
Width* /
;/ 0
j1 2
++2 4
)4 5
{ 
Rgba32 
pixel  
=! "
image# (
[( )
j) *
,* +
i, -
]- .
;. /
if   
(   
pixel   
.   
R   
<=    "
$num  # %
||  & (
pixel  ) .
.  . /
G  / 0
<=  1 3
$num  4 6
||  7 9
pixel  : ?
.  ? @
B  @ A
<=  B D
$num  E G
)  G H
{!! 
result"" 
["" 
i""  
,""  !
j""" #
]""# $
=""% &
pixel""' ,
."", -
A""- .
;"". /
}## 
else$$ 
{%% 
result&& 
[&& 
i&&  
,&&  !
j&&" #
]&&# $
=&&% &
$num&&' (
;&&( )
}'' 
}(( 
})) 
return** 
result** 
;** 
}++ 	
private-- 
Image-- 
<-- 
Rgba32-- 
>-- 
FillToAspectRatio-- /
(--/ 0
int--0 3
width--4 9
,--9 :
int--; >
height--? E
)--E F
{.. 	
double// 
ratioH// 
=// 
Math//  
.//  !
Max//! $
(//$ %
(//% &
double//& ,
)//, -
width//- 2
///3 4
image//5 :
.//: ;
Width//; @
,//@ A
(//B C
double//C I
)//I J
image//J O
.//O P
Width//P U
///V W
width//X ]
)//] ^
;//^ _
double00 
ratioW00 
=00 
Math00  
.00  !
Max00! $
(00$ %
(00% &
double00& ,
)00, -
height00- 3
/004 5
image006 ;
.00; <
Height00< B
,00B C
(00D E
double00E K
)00K L
image00L Q
.00Q R
Height00R X
/00Y Z
height00[ a
)00a b
;00b c
Size11 
newSize11 
=11 
new11 
Size11 #
(11# $
(11$ %
int11% (
)11( )
(11) *
width11* /
*110 1
ratioW112 8
)118 9
+11: ;
(11< =
image11= B
.11B C
Width11C H
/11I J
$num11K L
)11L M
,11M N
(11O P
int11P S
)11S T
(11T U
height11U [
*11\ ]
ratioH11^ d
)11d e
+11f g
(11h i
image11i n
.11n o
Height11o u
/11v w
$num11x y
)11y z
)11z {
;11{ |
Image22 
<22 
Rgba3222 
>22 
newImage22 "
=22# $
new22% (
Image22) .
<22. /
Rgba3222/ 5
>225 6
(226 7
newSize227 >
.22> ?
Width22? D
,22D E
newSize22F M
.22M N
Height22N T
)22T U
;22U V
newImage44 
.44 
Mutate44 
(44 
ic44 
=>44 !
{55 
ic66 
.66 
Fill66 
(66 
Color66 
.66 
White66 #
,66# $
new66% (

RectangleF66) 3
(663 4
$num664 5
,665 6
$num667 8
,668 9
newSize66: A
.66A B
Width66B G
,66G H
newSize66I P
.66P Q
Height66Q W
)66W X
)66X Y
;66Y Z
ic77 
.77 
	DrawImage77 
(77 
image77 "
,77" #
new77$ '
Point77( -
(77- .
(77. /
newSize77/ 6
.776 7
Width777 <
/77= >
$num77? @
)77@ A
-77B C
(77D E
image77E J
.77J K
Width77K P
/77Q R
$num77S T
)77T U
,77U V
(77W X
newSize77X _
.77_ `
Height77` f
/77g h
$num77i j
)77j k
-77l m
(77n o
image77o t
.77t u
Height77u {
/77| }
$num77~ 
)	77 Ä
)
77Ä Å
,
77Å Ç
$num
77É Ñ
)
77Ñ Ö
;
77Ö Ü
}88 
)88 
;88 
return:: 
newImage:: 
;:: 
};; 	
public== 
async== 
Task== 
<== 
byte== 
[== 
]==  
>==  !
Resize==" (
(==( )
int==) ,
width==- 2
,==2 3
int==4 7
height==8 >
)==> ?
{>> 	
Image?? 
<?? 
Rgba32?? 
>?? 
newImage?? "
=??# $
await??% *
Task??+ /
.??/ 0
Run??0 3
(??3 4
(??4 5
)??5 6
=>??7 9
FillToAspectRatio??: K
(??K L
width??L Q
,??Q R
height??S Y
)??Y Z
)??Z [
;??[ \
newImage@@ 
.@@ 
Mutate@@ 
(@@ 
ic@@ 
=>@@ !
{AA 
icBB 
.BB 
ResizeBB 
(BB 
widthBB 
,BB  
heightBB! '
)BB' (
;BB( )
}CC 
)CC 
;CC 
varEE 
streamEE 
=EE 
newEE 
MemoryStreamEE )
(EE) *
)EE* +
;EE+ ,
newImageFF 
.FF 
	SaveAsPngFF 
(FF 
streamFF %
)FF% &
;FF& '
newImageHH 
.HH 
DisposeHH 
(HH 
)HH 
;HH 
returnJJ 
streamJJ 
.JJ 
ToArrayJJ !
(JJ! "
)JJ" #
;JJ# $
}KK 	
publicNN 
TaskNN 
<NN 
(NN 
intNN 
,NN 
intNN 
,NN 
intNN "
,NN" #
intNN$ '
)NN' (
>NN( )
ComputeBounderiesNN* ;
(NN; <
)NN< =
{OO 	
intPP 
minWPP 
=PP 
imagePP 
.PP 
WidthPP "
;PP" #
intQQ 
maxWQQ 
=QQ 
$numQQ 
;QQ 
intSS 
minHSS 
=SS 
imageSS 
.SS 
HeightSS #
;SS# $
intTT 
maxHTT 
=TT 
$numTT 
;TT 
forVV 
(VV 
intVV 
iVV 
=VV 
$numVV 
;VV 
iVV 
<VV 
imageVV  %
.VV% &
HeightVV& ,
;VV, -
iVV. /
++VV/ 1
)VV1 2
{WW 
forXX 
(XX 
intXX 
jXX 
=XX 
$numXX 
;XX 
jXX  !
<XX" #
imageXX$ )
.XX) *
WidthXX* /
;XX/ 0
jXX1 2
++XX2 4
)XX4 5
{YY 
ifZZ 
(ZZ 
_imageMatrixZZ $
[ZZ$ %
iZZ% &
,ZZ& '
jZZ( )
]ZZ) *
==ZZ+ -
$numZZ. 1
)ZZ1 2
{[[ 
if\\ 
(\\ 
j\\ 
>\\ 
maxW\\  $
)\\$ %
maxW]]  
=]]! "
j]]# $
;]]$ %
if^^ 
(^^ 
j^^ 
<^^ 
minW^^  $
)^^$ %
minW__  
=__! "
j__# $
;__$ %
if`` 
(`` 
i`` 
>`` 
maxH``  $
)``$ %
maxHaa  
=aa! "
iaa# $
;aa$ %
ifbb 
(bb 
ibb 
<bb 
minHbb  $
)bb$ %
minHcc  
=cc! "
icc# $
;cc$ %
}dd 
}ee 
}ff 
returngg 
Taskgg 
.gg 

FromResultgg "
(gg" #
(gg# $
minWgg$ (
,gg( )
maxWgg* .
,gg. /
minHgg0 4
,gg4 5
maxHgg6 :
)gg: ;
)gg; <
;gg< =
}hh 	
publicjj 
asyncjj 
Taskjj 
<jj 
bytejj 
[jj 
]jj  
>jj  !
Cropjj" &
(jj& '
)jj' (
{kk 	
(mm 
intmm 
,mm 
intmm 
,mm 
intmm 
,mm 
intmm 
)mm  

bounderiesmm! +
=mm, -
awaitmm. 3
Taskmm4 8
.mm8 9
Runmm9 <
(mm< =
ComputeBounderiesmm= N
)mmN O
;mmO P
intoo 
widthBlackSpacesoo  
=oo! "

bounderiesoo# -
.oo- .
Item2oo. 3
-oo4 5

bounderiesoo6 @
.oo@ A
Item1ooA F
+ooG H
$numooI J
;ooJ K
intpp 
heightBlackSpacespp !
=pp" #

bounderiespp$ .
.pp. /
Item4pp/ 4
-pp5 6

bounderiespp7 A
.ppA B
Item3ppB G
+ppH I
$numppJ K
;ppK L
Imagerr 
<rr 
Rgba32rr 
>rr 
resultrr  
=rr! "
newrr# &
Imagerr' ,
<rr, -
Rgba32rr- 3
>rr3 4
(rr4 5
widthBlackSpacesrr5 E
,rrE F
heightBlackSpacesrrG X
)rrX Y
;rrY Z
inttt 
[tt 
,tt 
]tt 
resultMatrixtt 
=tt  !
newtt" %
inttt& )
[tt) *
heightBlackSpacestt* ;
,tt; <
widthBlackSpacestt= M
]ttM N
;ttN O
forvv 
(vv 
intvv 
ivv 
=vv 
$numvv 
;vv 
ivv 
<vv 
heightBlackSpacesvv  1
;vv1 2
ivv3 4
++vv4 6
)vv6 7
{ww 
forxx 
(xx 
intxx 
jxx 
=xx 
$numxx 
;xx 
jxx  !
<xx" #
widthBlackSpacesxx$ 4
;xx4 5
jxx6 7
++xx7 9
)xx9 :
{yy 
resultMatrixzz  
[zz  !
izz! "
,zz" #
jzz$ %
]zz% &
=zz' (
_imageMatrixzz) 5
[zz5 6

bounderieszz6 @
.zz@ A
Item3zzA F
+zzG H
izzI J
,zzJ K

bounderieszzL V
.zzV W
Item1zzW \
+zz] ^
jzz_ `
]zz` a
;zza b
if{{ 
({{ 
resultMatrix{{ $
[{{$ %
i{{% &
,{{& '
j{{( )
]{{) *
=={{+ -
$num{{. /
){{/ 0
{|| 
result}} 
[}} 
j}}  
,}}  !
i}}! "
]}}" #
=}}$ %
Color}}& +
.}}+ ,
FromRgb}}, 3
(}}3 4
$num}}4 7
,}}7 8
$num}}9 <
,}}< =
$num}}> A
)}}A B
;}}B C
}~~ 
else 
{
ÄÄ 
result
ÅÅ 
[
ÅÅ 
j
ÅÅ  
,
ÅÅ  !
i
ÅÅ" #
]
ÅÅ# $
=
ÅÅ% &
Color
ÅÅ' ,
.
ÅÅ, -
FromRgba
ÅÅ- 5
(
ÅÅ5 6
$num
ÅÅ6 7
,
ÅÅ7 8
$num
ÅÅ9 :
,
ÅÅ: ;
$num
ÅÅ< =
,
ÅÅ= >
Convert
ÅÅ? F
.
ÅÅF G
ToByte
ÅÅG M
(
ÅÅM N
resultMatrix
ÅÅN Z
[
ÅÅZ [
i
ÅÅ[ \
,
ÅÅ\ ]
j
ÅÅ^ _
]
ÅÅ_ `
)
ÅÅ` a
)
ÅÅa b
;
ÅÅb c
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 
var
áá 
stream
áá 
=
áá 
new
áá 
MemoryStream
áá )
(
áá) *
)
áá* +
;
áá+ ,
result
àà 
.
àà 
	SaveAsPng
àà 
(
àà 
stream
àà #
)
àà# $
;
àà$ %
result
ää 
.
ää 
Dispose
ää 
(
ää 
)
ää 
;
ää 
return
ãã 
stream
ãã 
.
ãã 
ToArray
ãã !
(
ãã! "
)
ãã" #
;
ãã# $
}
åå 	
private
éé 
Image
éé 
<
éé 
Rgba32
éé 
>
éé 
ImageCreator
éé *
(
éé* +
int
éé+ .

splitIndex
éé/ 9
,
éé9 :
int
éé; >
	lastSplit
éé? H
,
ééH I
int
ééJ M
[
ééM N
,
ééN O
]
ééO P
imageMatrix
ééQ \
)
éé\ ]
{
èè 	
Image
êê 
<
êê 
Rgba32
êê 
>
êê 
temp
êê 
=
êê  
new
êê! $
Image
êê% *
<
êê* +
Rgba32
êê+ 1
>
êê1 2
(
êê2 3

splitIndex
êê3 =
-
êê> ?
	lastSplit
êê@ I
,
êêI J
image
êêK P
.
êêP Q
Height
êêQ W
)
êêW X
;
êêX Y
for
ëë 
(
ëë 
int
ëë 
j
ëë 
=
ëë 
$num
ëë 
;
ëë 
j
ëë 
<
ëë 
image
ëë  %
.
ëë% &
Height
ëë& ,
;
ëë, -
j
ëë. /
++
ëë/ 1
)
ëë1 2
for
íí 
(
íí 
int
íí 
i
íí 
=
íí 
	lastSplit
íí &
;
íí& '
i
íí( )
<
íí* +

splitIndex
íí, 6
;
íí6 7
i
íí8 9
++
íí9 ;
)
íí; <
{
ìì 
if
îî 
(
îî 
imageMatrix
îî #
[
îî# $
j
îî$ %
,
îî% &
i
îî' (
]
îî( )
==
îî* ,
$num
îî- .
)
îî. /
{
ïï 
temp
ññ 
[
ññ 
i
ññ 
-
ññ  
	lastSplit
ññ! *
,
ññ* +
j
ññ, -
]
ññ- .
=
ññ/ 0
Color
ññ1 6
.
ññ6 7
FromRgb
ññ7 >
(
ññ> ?
$num
ññ? B
,
ññB C
$num
ññD G
,
ññG H
$num
ññI L
)
ññL M
;
ññM N
}
óó 
else
òò 
{
ôô 
temp
öö 
[
öö 
i
öö 
-
öö  
	lastSplit
öö! *
,
öö* +
j
öö, -
]
öö- .
=
öö/ 0
Color
öö1 6
.
öö6 7
FromRgba
öö7 ?
(
öö? @
$num
öö@ A
,
ööA B
$num
ööC D
,
ööD E
$num
ööF G
,
ööG H
Convert
ööI P
.
ööP Q
ToByte
ööQ W
(
ööW X
imageMatrix
ööX c
[
ööc d
j
ööd e
,
ööe f
i
öög h
]
ööh i
)
ööi j
)
ööj k
;
öök l
}
õõ 
}
úú 
return
ùù 
temp
ùù 
;
ùù 
}
ûû 	
public
†† 
async
†† 
Task
†† 
<
†† 
List
†† 
<
†† 
byte
†† #
[
††# $
]
††$ %
>
††% &
>
††& '
Split
††( -
(
††- .
)
††. /
{
°° 	
List
¢¢ 
<
¢¢ 
byte
¢¢ 
[
¢¢ 
]
¢¢ 
>
¢¢ 
result
¢¢ 
=
¢¢  !
new
¢¢" %
List
¢¢& *
<
¢¢* +
byte
¢¢+ /
[
¢¢/ 0
]
¢¢0 1
>
¢¢1 2
(
¢¢2 3
)
¢¢3 4
;
¢¢4 5
int
££ 
lastNotBank
££ 
=
££ 
-
££ 
$num
££  
;
££  !
List
§§ 
<
§§ 
int
§§ 
>
§§ 
	splitList
§§ 
=
§§  !
new
§§" %
List
§§& *
<
§§* +
int
§§+ .
>
§§. /
(
§§/ 0
)
§§0 1
;
§§1 2
for
¶¶ 
(
¶¶ 
int
¶¶ 
j
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶ 
j
¶¶ 
<
¶¶ 
image
¶¶  %
.
¶¶% &
Width
¶¶& +
;
¶¶+ ,
j
¶¶- .
++
¶¶. 0
)
¶¶0 1
{
ßß 
bool
®® 
isLineWhite
®®  
=
®®! "
true
®®# '
;
®®' (
for
©© 
(
©© 
int
©© 
i
©© 
=
©© 
$num
©© 
;
©© 
i
©©  !
<
©©" #
image
©©$ )
.
©©) *
Height
©©* 0
;
©©0 1
i
©©2 3
++
©©3 5
)
©©5 6
if
™™ 
(
™™ 
_imageMatrix
™™ $
[
™™$ %
i
™™% &
,
™™& '
j
™™( )
]
™™) *
==
™™+ -
$num
™™. 1
)
™™1 2
{
´´ 
isLineWhite
¨¨ #
=
¨¨$ %
false
¨¨& +
;
¨¨+ ,
lastNotBank
≠≠ #
=
≠≠$ %
$num
≠≠& '
;
≠≠' (
}
ÆÆ 
if
ØØ 
(
ØØ 
isLineWhite
ØØ 
&&
ØØ  "
lastNotBank
ØØ# .
!=
ØØ/ 1
-
ØØ2 3
$num
ØØ3 4
)
ØØ4 5
{
∞∞ 
	splitList
±± 
.
±± 
Add
±± !
(
±±! "
j
±±" #
)
±±# $
;
±±$ %
lastNotBank
≤≤ 
=
≤≤  !
-
≤≤" #
$num
≤≤# $
;
≤≤$ %
}
≥≥ 
}
¥¥ 
int
∂∂ 
	lastSplit
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
foreach
∏∏ 
(
∏∏ 
int
∏∏ 

splitIndex
∏∏ #
in
∏∏$ &
	splitList
∏∏' 0
)
∏∏0 1
{
ππ 
Image
∫∫ 
<
∫∫ 
Rgba32
∫∫ 
>
∫∫ 
temp
∫∫ "
=
∫∫# $
await
∫∫% *
Task
∫∫+ /
<
∫∫/ 0
Image
∫∫0 5
<
∫∫5 6
Rgba32
∫∫6 <
>
∫∫< =
>
∫∫= >
.
∫∫> ?
Run
∫∫? B
(
∫∫B C
(
∫∫C D
)
∫∫D E
=>
∫∫F H
ImageCreator
∫∫I U
(
∫∫U V

splitIndex
∫∫V `
,
∫∫` a
	lastSplit
∫∫b k
,
∫∫k l
_imageMatrix
∫∫m y
)
∫∫y z
)
∫∫z {
;
∫∫{ |
	lastSplit
ªª 
=
ªª 

splitIndex
ªª &
;
ªª& '
var
ºº 
stream
ºº 
=
ºº 
new
ºº  
MemoryStream
ºº! -
(
ºº- .
)
ºº. /
;
ºº/ 0
temp
ΩΩ 
.
ΩΩ 
	SaveAsPng
ΩΩ 
(
ΩΩ 
stream
ΩΩ %
)
ΩΩ% &
;
ΩΩ& '
temp
ææ 
.
ææ 
Dispose
ææ 
(
ææ 
)
ææ 
;
ææ 
result
øø 
.
øø 
Add
øø 
(
øø 
stream
øø !
.
øø! "
ToArray
øø" )
(
øø) *
)
øø* +
)
øø+ ,
;
øø, -
}
¡¡ 
return
√√ 
result
√√ 
;
√√ 
}
ƒƒ 	
public
∆∆ 
async
∆∆ 
Task
∆∆ 
<
∆∆ 
IEnumerable
∆∆ %
<
∆∆% &
float
∆∆& +
>
∆∆+ ,
>
∆∆, - 
GetFlattenedMatrix
∆∆. @
(
∆∆@ A
)
∆∆A B
{
«« 	
List
»» 
<
»» 
float
»» 
>
»» 
result
»» 
=
»»  
new
»»! $
List
»»% )
<
»») *
float
»»* /
>
»»/ 0
(
»»0 1
)
»»1 2
;
»»2 3
int
…… 
[
…… 
,
…… 
]
…… 
pixelMatrix
…… 
=
……  
await
……! &
Task
……' +
.
……+ ,
Run
……, /
(
……/ 0%
GetPixelMatrixFromImage
……0 G
)
……G H
;
……H I
foreach
   
(
   
int
   
x
   
in
   
pixelMatrix
   )
)
  ) *
{
ÀÀ 
result
ÃÃ 
.
ÃÃ 
Add
ÃÃ 
(
ÃÃ 
x
ÃÃ 
)
ÃÃ 
;
ÃÃ 
}
ÕÕ 
return
ŒŒ 
result
ŒŒ 
;
ŒŒ 
}
œœ 	
}
““ 
}”” ˆ
rD:\Github\number-recognition-net\number-recognition-api\NumberRecognitionAPI\Services\ImageService\ImageService.cs
	namespace 	
Services
 
. 
ImageService 
{ 
public 

class 
ImageService 
: 
IImageService  -
{		 
public

 
async

 
Task

 
<

 
byte

 
[

 
]

  
>

  !
Resize

" (
(

( )
byte

) -
[

- .
]

. /
source

0 6
,

6 7
int

7 :
width

; @
,

@ A
int

B E
height

F L
)

L M
{ 	
return 
await 
new 
ImageProcessor +
(+ ,
source, 2
)2 3
.3 4
Resize4 :
(: ;
width; @
,@ A
heightA G
)G H
;H I
} 	
public 
async 
Task 
< 
byte 
[ 
]  
>  !
Crop" &
(& '
byte' +
[+ ,
], -
source. 4
)4 5
{ 	
return 
await 
new 
ImageProcessor +
(+ ,
source, 2
)2 3
.3 4
Crop4 8
(8 9
)9 :
;: ;
} 	
public 
async 
Task 
< 
List 
< 
byte #
[# $
]$ %
>% &
>& '
Split( -
(- .
byte. 2
[2 3
]3 4
source5 ;
); <
{ 	
return 
await 
new 
ImageProcessor +
(+ ,
source, 2
)2 3
.3 4
Split4 9
(9 :
): ;
;; <
} 	
public 
async 
Task 
< 
float 
>  
Predict  '
(' (
byte( ,
[, -
]- .
source/ 5
)5 6
{ 	
return 
new 
NumberRecognition (
(( )
)) *
.* +
Predict+ 2
(2 3
await3 8
new9 <
ImageProcessor= K
(K L
sourceL R
)R S
.S T
GetFlattenedMatrixT f
(f g
)g h
)h i
;i j
} 	
} 
} â`
wD:\Github\number-recognition-net\number-recognition-api\NumberRecognitionAPI\Services\ImageService\NumberRecognition.cs
	namespace 	
NumberRecognitionML
 
{ 
public 

class 
Digit 
{ 
public   
float   
Number   
;   
[!! 	

VectorType!!	 
(!! 
$num!! 
)!! 
]!! 
public!!  
float!!! &
[!!& '
]!!' (
PixelValues!!) 4
;!!4 5
}"" 
public'' 

class'' 
DigitPrediction''  
{(( 
[)) 	

ColumnName))	 
()) 
$str)) 
))) 
])) 
public** 
float** 
[** 
]** 
Score** 
;** 
public++ 
float++ 
PredictedNumber++ $
;++$ %
},, 
public.. 

class.. 
NumberRecognition.. "
{// 
private00 
static00 
bool00 

HasHeaders00 &
=00' (
true00) -
;00- .
public11 
void11 
Train11 
(11 
string11  
dataPath11! )
,11) *
string11+ 1
	modelPath112 ;
,11; <
string11< B
testPath11C K
)11K L
{22 	
var44 
context44 
=44 
new44 
	MLContext44 '
(44' (
)44( )
;44) *
Trace77 
.77 
	WriteLine77 
(77 
$str77 .
)77. /
;77/ 0
var88 
dataView88 
=88 
context88 "
.88" #
Data88# '
.88' (
LoadFromTextFile88( 8
(888 9
path99 
:99 
dataPath99 
,99 
columns:: 
::: 
new:: 
[:: 
]:: 
{;; 
new<< 

TextLoader<< "
.<<" #
Column<<# )
(<<) *
$str<<* 2
,<<2 3
DataKind<<4 <
.<<< =
Single<<= C
,<<C D
$num<<E F
)<<F G
,<<G H
new== 

TextLoader== "
.==" #
Column==# )
(==) *
nameof==* 0
(==0 1
Digit==1 6
.==6 7
PixelValues==7 B
)==B C
,==C D
DataKind==E M
.==M N
Single==N T
,==T U
$num==V W
,==W X
$num==Y \
)==\ ]
}>> 
,>> 
	hasHeader?? 
:?? 

HasHeaders?? %
,??% &
separatorChar@@ 
:@@ 
$char@@ "
)@@" #
;@@# $
varAA 
testSetAA 
=AA 
contextAA !
.AA! "
DataAA" &
.AA& '
LoadFromTextFileAA' 7
(AA7 8
pathBB 
:BB 
testPathBB 
,BB 
columnsCC 
:CC 
newCC 
[CC 
]CC 
{DD 
newEE 

TextLoaderEE "
.EE" #
ColumnEE# )
(EE) *
$strEE* 2
,EE2 3
DataKindEE4 <
.EE< =
SingleEE= C
,EEC D
$numEEE F
)EEF G
,EEG H
newFF 

TextLoaderFF "
.FF" #
ColumnFF# )
(FF) *
nameofFF* 0
(FF0 1
DigitFF1 6
.FF6 7
PixelValuesFF7 B
)FFB C
,FFC D
DataKindFFE M
.FFM N
SingleFFN T
,FFT U
$numFFV W
,FFW X
$numFFY \
)FF\ ]
}GG 
,GG 
	hasHeaderHH 
:HH 

HasHeadersHH %
,HH% &
separatorCharII 
:II 
$charII "
)II" #
;II# $
varOO 
pipelineOO 
=OO 
contextOO "
.OO" #

TransformsOO# -
.OO- .
ConcatenateOO. 9
(OO9 :
$strOO: D
,OOD E
nameofQQ 
(QQ 
DigitQQ 
.QQ 
PixelValuesQQ (
)QQ( )
)QQ) *
.SS 
AppendSS 
(SS 
contextSS 
.SS  

TransformsSS  *
.SS* +

ConversionSS+ 5
.SS5 6
MapValueToKeySS6 C
(SSC D
inputColumnNameSSD S
:SSS T
$strSSU ]
,SS] ^
outputColumnNameSS_ o
:SSo p
$strSSq x
)SSx y
)SSy z
.VV !
AppendCacheCheckpointVV &
(VV& '
contextVV' .
)VV. /
.YY 
AppendYY 
(YY 
contextYY 
.YY  $
MulticlassClassificationYY  8
.YY8 9
TrainersYY9 A
.YYA B
SdcaMaximumEntropyYYB T
(YYT U
labelColumnNameZZ #
:ZZ# $
$strZZ% ,
,ZZ, -
featureColumnName[[ %
:[[% &
$str[[' 1
)[[1 2
)[[2 3
.]] 
Append]] 
(]] 
context]] 
.]]  

Transforms]]  *
.]]* +

Conversion]]+ 5
.]]5 6
MapKeyToValue]]6 C
(]]C D
$str]]D U
,]]U V
$str]]W g
)]]g h
)]]h i
;]]i j
Trace`` 
.`` 
	WriteLine`` 
(`` 
$str`` 0
)``0 1
;``1 2
varaa 
modelaa 
=aa 
pipelineaa  
.aa  !
Fitaa! $
(aa$ %
dataViewaa% -
)aa- .
;aa. /
Traceee 
.ee 
	WriteLineee 
(ee 
$stree 2
)ee2 3
;ee3 4
varff 
predictionsff 
=ff 
modelff #
.ff# $
	Transformff$ -
(ff- .
testSetff. 5
)ff5 6
;ff6 7
varii 
metricsii 
=ii 
contextii !
.ii! "$
MulticlassClassificationii" :
.ii: ;
Evaluateii; C
(iiC D
datajj 
:jj 
predictionsjj !
)mm 
;mm 
Tracepp 
.pp 
	WriteLinepp 
(pp 
$"pp 
$strpp 0
"pp0 1
)pp1 2
;pp2 3
Traceqq 
.qq 
	WriteLineqq 
(qq 
$"qq 
$strqq 4
{qq4 5
metricsqq5 <
.qq< =
MicroAccuracyqq= J
:qqJ K
$strqqK P
}qqP Q
"qqQ R
)qqR S
;qqS T
Tracerr 
.rr 
	WriteLinerr 
(rr 
$"rr 
$strrr 4
{rr4 5
metricsrr5 <
.rr< =
MacroAccuracyrr= J
:rrJ K
$strrrK P
}rrP Q
"rrQ R
)rrR S
;rrS T
Tracess 
.ss 
	WriteLiness 
(ss 
$"ss 
$strss 4
{ss4 5
metricsss5 <
.ss< =
LogLossss= D
:ssD E
$strssE J
}ssJ K
"ssK L
)ssL M
;ssM N
Tracett 
.tt 
	WriteLinett 
(tt 
$"tt 
$strtt 4
{tt4 5
metricstt5 <
.tt< =
LogLossReductiontt= M
:ttM N
$strttN S
}ttS T
"ttT U
)ttU V
;ttV W
contextvv 
.vv 
Modelvv 
.vv 
Savevv 
(vv 
modelvv $
,vv$ %
dataViewvv& .
.vv. /
Schemavv/ 5
,vv5 6
	modelPathvv7 @
)vv@ A
;vvA B
Traceww 
.ww 
	WriteLineww 
(ww 
$"ww 
$strww $
{ww$ %
	modelPathww% .
}ww. /
$strww/ 6
"ww6 7
)ww7 8
;ww8 9
_predictionEngineyy 
=yy 
contextyy  '
.yy' (
Modelyy( -
.yy- ."
CreatePredictionEngineyy. D
<yyD E
DigityyE J
,yyJ K
DigitPredictionyyL [
>yy[ \
(yy\ ]
modelyy] b
)yyb c
;yyc d
}zz 	
private|| 
PredictionEngine||  
<||  !
Digit||! &
,||& '
DigitPrediction||( 7
>||7 8
_predictionEngine||9 J
;||J K
public~~ 
void~~ 
	LoadModel~~ 
(~~ 
string~~ $
	modelPath~~% .
)~~. /
{ 	
var
ÄÄ 
context
ÄÄ 
=
ÄÄ 
new
ÄÄ 
	MLContext
ÄÄ '
(
ÄÄ' (
)
ÄÄ( )
;
ÄÄ) *
DataViewSchema
ÅÅ 
schema
ÅÅ !
;
ÅÅ! "
var
ÇÇ 
model
ÇÇ 
=
ÇÇ 
context
ÇÇ 
.
ÇÇ  
Model
ÇÇ  %
.
ÇÇ% &
Load
ÇÇ& *
(
ÇÇ* +
	modelPath
ÇÇ+ 4
,
ÇÇ4 5
out
ÇÇ6 9
schema
ÇÇ: @
)
ÇÇ@ A
;
ÇÇA B
_predictionEngine
ÉÉ 
=
ÉÉ 
context
ÉÉ  '
.
ÉÉ' (
Model
ÉÉ( -
.
ÉÉ- .$
CreatePredictionEngine
ÉÉ. D
<
ÉÉD E
Digit
ÉÉE J
,
ÉÉJ K
DigitPrediction
ÉÉL [
>
ÉÉ[ \
(
ÉÉ\ ]
model
ÉÉ] b
)
ÉÉb c
;
ÉÉc d
Trace
ÑÑ 
.
ÑÑ 
	WriteLine
ÑÑ 
(
ÑÑ 
$"
ÑÑ 
$str
ÑÑ $
{
ÑÑ$ %
	modelPath
ÑÑ% .
}
ÑÑ. /
$str
ÑÑ/ 7
"
ÑÑ7 8
)
ÑÑ8 9
;
ÑÑ9 :
}
ÖÖ 	
public
áá 
DigitPrediction
áá 
PredictDigit
áá +
(
áá+ ,
Digit
áá, 1
digit
áá2 7
)
áá7 8
{
àà 	
try
ââ 
{
ää 
return
ãã 
_predictionEngine
ãã (
.
ãã( )
Predict
ãã) 0
(
ãã0 1
digit
ãã1 6
)
ãã6 7
;
ãã7 8
}
åå 
catch
çç 
(
çç 
	Exception
çç 
exp
çç  
)
çç  !
{
éé 
Trace
èè 
.
èè 
	WriteLine
èè 
(
èè  
$str
èè  B
+
èèC D
exp
èèE H
.
èèH I
Message
èèI P
)
èèP Q
;
èèQ R
return
êê 
null
êê 
;
êê 
}
ëë 
}
íí 	
public
îî 
float
îî 
Predict
îî 
(
îî 
IEnumerable
îî (
<
îî( )
float
îî) .
>
îî. /

attributes
îî0 :
)
îî: ;
{
ïï 	
Digit
ññ 
digit
ññ 
=
ññ 
new
ññ 
Digit
ññ #
(
ññ# $
)
ññ$ %
;
ññ% &
digit
óó 
.
óó 
PixelValues
óó 
=
óó 

attributes
óó  *
.
óó* +
ToArray
óó+ 2
(
óó2 3
)
óó3 4
;
óó4 5
for
òò 
(
òò 
int
òò 
i
òò 
=
òò 
$num
òò 
;
òò 
i
òò 
<
òò 
$num
òò  #
;
òò# $
i
òò% &
++
òò& (
)
òò( )
{
ôô 
if
öö 
(
öö 
digit
öö 
.
öö 
PixelValues
öö %
[
öö% &
i
öö& '
]
öö' (
>
öö) *
$num
öö+ -
)
öö- .
digit
õõ 
.
õõ 
PixelValues
õõ %
[
õõ% &
i
õõ& '
]
õõ' (
=
õõ) *
$num
õõ+ -
;
õõ- .
}
úú 
	LoadModel
ûû 
(
ûû 
$str
ûû >
)
ûû> ?
;
ûû? @
var
üü 
predictionResult
üü  
=
üü! "
PredictDigit
üü# /
(
üü/ 0
digit
üü0 5
)
üü5 6
;
üü6 7
return
†† 
predictionResult
†† #
.
††# $
PredictedNumber
††$ 3
;
††3 4
}
°° 	
}
¢¢ 
}££ 