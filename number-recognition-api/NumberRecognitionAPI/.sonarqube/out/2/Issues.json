{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "3.11.0.0",
        "fileVersion": "3.11.0-4.21403.6 (ae1fff34)",
        "semanticVersion": "3.11.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///A:/!facultate/anul3/IMR/number-recognition-net/number-recognition-api/NumberRecognitionAPI/Services/ImageService/ImageProcessor.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 41,
                  "endLine": 160,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_imageMatrix' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///A:/!facultate/anul3/IMR/number-recognition-net/number-recognition-api/NumberRecognitionAPI/Services/ImageService/ImageProcessor.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 16,
                  "endLine": 15,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 22 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///A:/!facultate/anul3/IMR/number-recognition-net/number-recognition-api/NumberRecognitionAPI/Services/ImageService/ImageProcessor.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 43,
                  "endLine": 78,
                  "endColumn": 60
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///A:/!facultate/anul3/IMR/number-recognition-net/number-recognition-api/NumberRecognitionAPI/Services/ImageService/ImageProcessor.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 13,
                  "endLine": 86,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///A:/!facultate/anul3/IMR/number-recognition-net/number-recognition-api/NumberRecognitionAPI/Services/ImageService/ImageProcessor.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 17,
                  "endLine": 88,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///A:/!facultate/anul3/IMR/number-recognition-net/number-recognition-api/NumberRecognitionAPI/Services/ImageService/ImageProcessor.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 21,
                  "endLine": 90,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///A:/!facultate/anul3/IMR/number-recognition-net/number-recognition-api/NumberRecognitionAPI/Services/ImageService/ImageProcessor.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 25,
                  "endLine": 92,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///A:/!facultate/anul3/IMR/number-recognition-net/number-recognition-api/NumberRecognitionAPI/Services/ImageService/ImageProcessor.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 25,
                  "endLine": 94,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///A:/!facultate/anul3/IMR/number-recognition-net/number-recognition-api/NumberRecognitionAPI/Services/ImageService/ImageProcessor.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 25,
                  "endLine": 96,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///A:/!facultate/anul3/IMR/number-recognition-net/number-recognition-api/NumberRecognitionAPI/Services/ImageService/ImageProcessor.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 25,
                  "endLine": 98,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+4 (incl 3 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+4 (incl 3 for nesting)",
              "6": "+4 (incl 3 for nesting)"
            }
          }
        }
      ],
      "rules": {
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        }
      }
    }
  ]
}